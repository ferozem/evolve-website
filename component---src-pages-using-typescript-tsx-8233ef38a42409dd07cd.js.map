{"version":3,"file":"component---src-pages-using-typescript-tsx-8233ef38a42409dd07cd.js","mappings":"2NAaA,MAgCaA,EAA0B,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAAA,IAAC,KACvDC,EAAI,SACJC,GACD,SACCL,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAAA,KAAAA,KAAI,mBACc,yBAAG,0BAErBA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,cAAiB,oBACxD,4BAAM,cAAiB,gBAAa,4BAAM,YAAe,UAEnEA,EAAAA,cAAAA,IAAAA,KAAG,gCAC4B,4BAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,gRCvCAC,EAAgB,sCAChBC,EAAS,+BACTC,EAAgB,sCAChBC,EAAO,6BACPC,EAAO,6BACPC,EAAM,4BACN,EAAO,6BC6DlB,MAlEe,KACb,MAAOC,EAAUC,GAAepB,EAAAA,UAAe,GAEzCqB,EAAa,KACjBD,GAAaD,EAAS,EAGxB,OACE,0BAAQG,UAAWC,GACjB,uBAAKD,UAAWC,GACd,uBAAKD,UAAWC,GACd,gBAAC,EAAAZ,KAAI,CAACC,GAAG,KAAI,mBAGf,uBACEU,UAAWC,EACXC,QAASH,EACTI,KAAK,SACLC,SAAU,EACVC,UAAWN,GAEX,6BACA,6BACA,8BAQF,uBACEC,UAAcC,EAAgB,KAC5BJ,EAAWI,EAAoBA,EAAAA,SAGjC,sBAAID,UAAWC,GACb,0BACE,qBAAGb,KAAK,SAAQ,SAElB,0BACE,qBAAGA,KAAK,UAAS,UAEnB,0BAIE,qBAAGA,KAAK,mBAAkB,mBAE5B,0BACE,qBAAGA,KAAK,aAAY,aAEtB,0BACE,qBAAGA,KAAK,iBAAgB,iBAE1B,0BACE,qBAAGA,KAAK,YAAW,eAMpB,C,uDC3Bb,IAjCe,IAAmB,IAAlB,SAAEkB,GAAU,GACbC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCAEE,2BACE,4BAAOD,GACP,0BACEE,MAAO,CAELC,SAAS,iBACTC,UAAW,aAShB,C,+CCSP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAE/B,EAAK,SAAE0B,GAAU,EAC3C,MAAM,KAAEpB,IAASqB,EAAAA,EAAAA,gBAAe,YAc1BK,EAAkBD,GAAezB,EAAK2B,aAAaF,YACnDG,EAAgC,QAApB,EAAG5B,EAAK2B,oBAAY,aAAjB,EAAmBjC,MAExC,OACE,gCACE,6BAAQkC,EAAkBlC,EAAK,MAAMkC,EAAiBlC,GACtD,wBAAMmC,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASpC,IACnC,wBAAMqC,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAA9B,EAAK2B,oBAAY,aAAjB,EAAmBK,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASpC,IACpC,wBAAMmC,KAAK,sBAAsBC,QAASJ,IACzCN,EAGP,C","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/styles/header.module.css","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  location,\r\n}) => (\r\n  <Layout>\r\n    <h1>\r\n      Gatsby supports <b>TypeScript by default</b>\r\n    </h1>\r\n    <p>\r\n      This means that you can create and write <code>.ts/.tsx</code> files for\r\n      your pages, components, and <code>gatsby-*</code> configuration files (for\r\n      example <code>gatsby-config.ts</code>).\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <code>typescript</code> via npm\r\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page <code>{location.pathname}</code> which was\r\n      built on {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"header-module--container--98c87\";\nexport var dropdownMenu = \"header-module--dropdownMenu--59847\";\nexport var hamburgerMenu = \"header-module--hamburgerMenu--07371\";\nexport var header = \"header-module--header--51a6e\";\nexport var headerContent = \"header-module--headerContent--d0027\";\nexport var logo = \"header-module--logo--d8441\";\nexport var menu = \"header-module--menu--09849\";\nexport var nav = \"header-module--nav--576d0\";\nexport var open = \"header-module--open--e786c\";","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport * as headerStyles from \"../styles/header.module.css\"\r\n\r\nconst Header = () => {\r\n  const [menuOpen, setMenuOpen] = React.useState(false)\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen)\r\n  }\r\n\r\n  return (\r\n    <header className={headerStyles.header}>\r\n      <div className={headerStyles.headerContent}>\r\n        <div className={headerStyles.logo}>\r\n          <Link to=\"/\">EVOLVE ACADEMY</Link>\r\n        </div>\r\n        {/* Add onClick event to the hamburger menu */}\r\n        <div\r\n          className={headerStyles.hamburgerMenu}\r\n          onClick={toggleMenu}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          onKeyDown={toggleMenu}\r\n        >\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n        {/* <div\r\n          className={`${headerStyles.dropdownMenu} ${\r\n            menuOpen ? headerStyles.open : headerStyles.closed\r\n          }`}\r\n        > */}\r\n        {/* <nav> */}\r\n        <nav\r\n          className={`${headerStyles.nav} ${\r\n            menuOpen ? headerStyles.open : headerStyles.closed\r\n          }`}\r\n        >\r\n          <ul className={headerStyles.menu}>\r\n            <li>\r\n              <a href=\"#hero\">Home</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#about\">About</a>\r\n            </li>\r\n            <li>\r\n              {/* <Link to=\"/course-details\" onClick={toggleMenu}>\r\n                Course Details\r\n              </Link> */}\r\n              <a href=\"#course-details\">Course Details</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#features\">Features</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#testimonials\">Testimonials</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#contact\">Contact</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      {/* </div> */}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      {/* <Header siteTitle={data.site.siteMetadata?.title || `Title`} /> */}\r\n      <div>\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            // marginTop: `var(--space-5)`,\r\n            fontSize: `var(--font-sm)`,\r\n            textAlign: \"center\",\r\n            // padding: \"1rem\",\r\n          }}\r\n        >\r\n          {/* Â© {new Date().getFullYear()} &middot; Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a> */}\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","hamburgerMenu","header","headerContent","logo","menu","nav","menuOpen","setMenuOpen","toggleMenu","className","headerStyles","onClick","role","tabIndex","onKeyDown","children","useStaticQuery","style","fontSize","textAlign","description","metaDescription","siteMetadata","defaultTitle","name","content","property","author"],"sourceRoot":""}